volumes:
  ts_state:
secrets:
  ts_authkey:
    environment: TS_AUTHKEY
x-ts-sidecar: &ts-sidecar
  image: tailscale/tailscale:latest
  volumes:
    - ts_state:/ts_state
  secrets:
    - ts_authkey
  environment: &ts-env
    TS_AUTHKEY: "file:/run/secrets/ts_authkey"
    TS_EXTRA_ARGS: "--advertise-tags=tag:dns-server --accept-routes"
    TS_ENABLE_HEALTH_CHECK: true
    TS_LOCAL_ADDR_PORT: 127.0.0.1:41234
    #TS_STATE: "mem:"
    TS_STATE: "/ts_state"
    #TS_SERVE_CONFIG: /config/serve.json
    TS_HOSTNAME: generic-sidecar
    TS_USERSPACE: false
  devices:
    - /dev/net/tun:/dev/net/tun # Network configuration for Tailscale to work
  cap_add:
    - net_admin # Tailscale requirement
    - sys_module # Tailscale requirement
  healthcheck:
    test: ["CMD", "wget", "--spider", "-q", "http://127.0.0.1:41234/healthz"] # Check Tailscale has a Tailnet IP and is operational
    interval: 1m # How often to perform the check
    timeout: 10s # Time to wait for the check to succeed
    retries: 3 # Number of retries before marking as unhealthy
    start_period: 10s # Time to wait before starting health checks
  extra_hosts:
    - host.docker.internal=host-gateway
  restart: always
services:
  coredns-ts:
    <<: *ts-sidecar
    environment:
      <<: *ts-env
      TS_HOSTNAME: "a2cname"
    #ports:
    #  - 80:80
  coredns:
    network_mode: service:coredns-ts
    ports: !reset []
